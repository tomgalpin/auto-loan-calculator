{"version":3,"sources":["components/loanForm.jsx","components/loanResults.jsx","components/loanAmortization.jsx","components/loanCalculator.jsx","App.js","index.js"],"names":["LoanForm","props","state","price","downPayment","duration","interestRate","isError","handleChange","bind","handleSubmit","this","parentCallback","event","target","value","name","setState","preventDefault","checkFormValues","triggerErrorMsg","hideErrorMsg","sendParentFormValues","className","onSubmit","htmlFor","type","min","max","onChange","React","Component","LoanResults","results","monthlyPayment","totalLoanAmt","totalPrincipal","totalInterest","LoanAmortization","array","map","rowObj","index","month","key","interestPayment","principalPayment","endingPrincipal","hiddenClass","table","isHidden","amortizationArray","resultsArray","renderTableRows","LoanCalculator","formCallback","formValues","formValue","setLoanResults","amortization","totalInterestPaid","toFixed","numMonths","principal","toPower","interest","parseFloat","Math","pow","calcMonthlyPayment","calcTotalLoanAmt","calcTotalInterest","calcTotalPrincipal","loanResults","calcLoanResults","amortizationResults","calcAmortizationResults","payThisMuch","i","amortizationMonth","principalPaid","push","formResults","amortizationTable","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e97a2eb.chunk.js","sourcesContent":["import React from 'react';\n\nclass LoanForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: \"\",\n      downPayment: \"\",\n      duration: \"\",\n      interestRate: \"\",\n      isError: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  sendParentFormValues() {\n    /**\n    * Sends state values to Parent Callback function\n    * @return {function} parentCallback()\n    */\n    this.props.parentCallback(this.state)\n  }\n\n  handleChange(event) {\n    /**\n    * Handles form input field event changes\n    * @param {obj} event \n    * @return {function} setState()\n    */\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  checkFormValues() {\n    /**\n    * Checks if form field inputs are valid (empty or below a certain number)\n    * @return {bool}\n    */\n    if (   \n      this.state.price === \"\" ||\n      this.state.downPayment === \"\" ||\n      this.state.duration === \"\" ||\n      this.state.interestRate === \"\" ||\n      this.state.duration < 1 ||\n      this.state.interestRate < 0.01\n     ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  triggerErrorMsg() {\n    /**\n    * Sets the error message in state to true\n    * @return {function} setState()\n    */\n    this.setState({\n      isError: true\n    })\n  }\n\n  hideErrorMsg() {\n    /**\n    * Sets the error message in state to false\n    * @return {function} setState()\n    */\n    this.setState({\n      isError: false\n    })\n  }\n\n  handleSubmit(event) {\n    /**\n    * Handles the submit btn in the form fields\n    * @param {obj} event \n    * @return {function} triggerErrorMsg()\n    * @return {function} hideErrorMsg()\n    * @return {function} sendParentFormValues()\n    */\n    event.preventDefault();\n    const isError = this.checkFormValues();\n\n    if (isError) {\n      this.triggerErrorMsg();\n    } else {\n      this.hideErrorMsg();\n      this.sendParentFormValues();\n    } \n  }\n\n  render() {\n    const isError = this.state.isError ? \"show-fast\" : \"hide-fast\";\n\n    return (\n      <div className=\"loan-form-container component\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"input-container\">\n            <label htmlFor=\"price\">Price</label>\n            <div className=\"form-container\">\n              <div className=\"symbol\">$</div>\n              <input \n                name=\"price\" \n                type=\"number\"\n                min=\"0\"\n                max=\"100000\" \n                value={this.state.price} \n                onChange={this.handleChange}/>\n              </div>\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"downPayment\">Down Payment</label>\n            <div className=\"form-container\">\n              <div className=\"symbol\">$</div>\n              <input \n              name=\"downPayment\" \n              type=\"number\"\n              min=\"0\"\n              max=\"100000\" \n              value={this.state.downPayment} \n              onChange={this.handleChange}/>\n            </div>\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"duration\">Duration (Months)</label>\n            <div className=\"form-container duration\">\n              <input \n              name=\"duration\" \n              type=\"number\"\n              min=\"1\"\n              max=\"100000\" \n              value={this.state.duration} \n              onChange={this.handleChange}/>\n            </div>\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"interestRate\">Interest Rate</label>\n            <div className=\"form-container interest\">\n              <input \n              name=\"interestRate\" \n              type=\"number\"\n              min=\"0\"\n              max=\"1000\" \n              value={this.state.interestRate} \n              onChange={this.handleChange}/>\n              <div className=\"symbol\">%</div>\n            </div>\n          </div>\n          <div className=\"input-container submit-button\">\n            <input type=\"submit\" value=\"Calculate Loan\" />\n            <div className={`error-msg-container ${isError}`}>\n              <p>Please make sure you have non-empty, valid numbers in your form fields.</p>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoanForm;\n","import React from 'react';\n\nfunction LoanResults(props) {\n  return (\n    <div className=\"loan-results-container component\">\n      <div>\n        <p>Monthly Payment</p>\n        <p>${props.results.monthlyPayment}</p>\n      </div>\n      <div>\n        <p><span>Total Loan Amount: </span>${props.results.totalLoanAmt}</p>\n        <p><span>Total Principal: </span>${props.results.totalPrincipal}</p>\n        <p><span>Total Interest: </span>${props.results.totalInterest}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoanResults;\n","import React from 'react';\n\nclass LoanAmortization extends React.Component {\n  renderTableRows(array) {\n    /**\n    * Render Loam Amortization Table rows\n    * @param {array} array \n    * @return {string} num\n    */  \n    return array.map( (rowObj, index) => {\n      let month = index + 1;\n\n      return (\n          <tr key={index}>\n            <td className=\"month column\">{month}</td>\n            <td className=\"monthly-payment column\">$ {rowObj.monthlyPayment}</td>\n            <td className=\"interest-payment column\">$ {rowObj.interestPayment}</td> \n            <td className=\"principal-payment column\">$ {rowObj.principalPayment}</td>\n            <td className=\"principal-left column\">$ {rowObj.endingPrincipal}</td>\n          </tr>\n        )\n    });\n  }\n\n  render() {\n    const hiddenClass = this.props.table.isHidden ? \"hide\" : \"show\";\n    const amortizationArray = this.props.table.resultsArray;\n\n    return (\n      <div className={`loan-table-container component ${hiddenClass}`}>\n        <table className=\"table table-condensced table-bordered\">\n          <thead>\n            <tr>\n              <th className=\"month column\">Month</th>\n              <th>Monthly Payment</th> \n              <th>Interest Payment</th> \n              <th>Principal Payment</th>\n              <th>Principal Left</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderTableRows(amortizationArray)}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default LoanAmortization;\n","import React from 'react';\nimport LoanForm from './loanForm';\nimport LoanResults from './loanResults';\nimport LoanAmortization from './loanAmortization';\n\nclass LoanCalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValue: {\n        price: \"\",\n        downPayment: \"\",\n        duration: \"\",\n        interestRate: \"\"\n      },\n      results: {\n        totalPrincipal: \"0\",\n        totalLoanAmt: \"0\",\n        monthlyPayment: \"0\",\n        totalInterest: \"0\"\n      },\n      amortization: {\n        resultsArray: [],\n        totalInterestPaid: \"\",\n        isHidden: true\n      }\n    };\n  }\n\n  calcTotalPrincipal(totalLoanAmt, totalInterest) {\n    /**\n    * Calculate the Total Prinicipal Paid\n    * @param {string} totalLoanAmt \n    * @param {string} totalInterest \n    * @return {float}\n    */ \n    return (totalLoanAmt - totalInterest).toFixed(2);\n  }\n\n  calcTotalInterest(monthlyPayment, numMonths, principal) {\n    /**\n    * Calculate the Total Interest Paid\n    * @param {string} monthlyPayment \n    * @param {number} numMonths \n    * @param {number} principal \n    * @return {float}\n    */ \n    return ((monthlyPayment * numMonths ) - principal).toFixed(2);\n  }\n  calcMonthlyPayment(principal, toPower, interest) {\n    /**\n    * Calculate the Monthly Payment\n    * @param {string} principal \n    * @param {number} toPower \n    * @param {string} interest \n    * @return {float}\n    */ \n    return (( principal * toPower * interest ) / ( toPower -1)).toFixed(2);\n  }\n\n  calcTotalLoanAmt(numMonths, monthlyPayment) {\n    /**\n    * Calculate the Total Loan Amount\n    * @param {number} numMonths \n    * @param {string} monthlyPayment \n    * @return {float}\n    */ \n    return (numMonths * monthlyPayment).toFixed(2);\n  }\n\n  calcLoanResults(formValue) {\n    /**\n    * Parent function that calls the calcTotal functions to get the \n    * results from the loan form fields.\n    * @param {obj} formValue \n    * @return {obj}\n    */ \n    const principal = parseFloat( formValue.price - formValue.downPayment );\n    const interest = parseFloat( formValue.interestRate / 100 / 12 );\n    const numMonths = parseFloat( formValue.duration );\n    const toPower = Math.pow( 1 + interest, numMonths );\n    const monthlyPayment = this.calcMonthlyPayment(principal, toPower, interest);\n    const totalLoanAmt = this.calcTotalLoanAmt(numMonths, monthlyPayment);\n    const totalInterest = this.calcTotalInterest(monthlyPayment, numMonths, principal);\n    const totalPrincipal = this.calcTotalPrincipal(totalLoanAmt, totalInterest);\n\n    return {\n      monthlyPayment: monthlyPayment,\n      totalLoanAmt: totalLoanAmt,\n      totalPrincipal: totalPrincipal,\n      totalInterest: totalInterest\n    }\n  }\n\n  setLoanResults() {\n    /**\n    * Sets the state of the Loan Results\n    * @return {function} setState()\n    */ \n    const loanResults = this.calcLoanResults(this.state.formValue);\n    const monthlyPayment = loanResults.monthlyPayment;\n    const totalInterest = loanResults.totalInterest;\n    const totalPrincipal = loanResults.totalPrincipal;\n    const totalLoanAmt = loanResults.totalLoanAmt;\n    const duration = this.state.formValue.duration;\n    const amortizationResults = this.calcAmortizationResults(totalPrincipal, totalInterest, duration, monthlyPayment);\n\n    this.setState({\n      results: {\n        monthlyPayment: monthlyPayment,\n        totalLoanAmt: totalLoanAmt,\n        totalPrincipal: totalPrincipal,\n        totalInterest: totalInterest\n      }, \n      amortization: {\n        resultsArray: amortizationResults,\n        isHidden: false\n      }\n    });\n  }\n\n  calcAmortizationResults(totalPrincipal, totalInterest, duration, monthlyPayment) {\n    /**\n    * Calculates the Amortization values\n    * Formula from:  https://m.wikihow.com/Calculate-Amortization\n    * @param {string} totalPrincipal \n    * @param {string} totalInterest \n    * @param {string} duration \n    * @param {string} monthlyPayment \n    * @return {array} amortizationArray\n    */\n    const interestRate = this.state.formValue.interestRate / 100 / 12;\n\n    let principal = totalPrincipal;\n    let payThisMuch = parseFloat(monthlyPayment);\n    let interestPayment = principal * interestRate;\n    let principalPayment = payThisMuch - interestPayment;\n    let endingPrincipal = principal - principalPayment;\n    let amortizationArray = [];\n\n    for (let i=0; i<duration; i++) {\n\n      if (monthlyPayment > endingPrincipal) {\n        payThisMuch = endingPrincipal;\n        principalPayment = payThisMuch - interestPayment;\n        endingPrincipal = 0;\n      } else {\n        interestPayment = principal * interestRate;\n        principalPayment = payThisMuch - interestPayment;\n        endingPrincipal = principal - principalPayment;\n      }\n\n      principal = endingPrincipal;\n\n      let amortizationMonth = {\n        monthlyPayment: payThisMuch.toFixed(2),\n        principalPaid: principal.toFixed(2),\n        interestPayment: interestPayment.toFixed(2),\n        principalPayment: principalPayment.toFixed(2),\n        endingPrincipal: endingPrincipal.toFixed(2)\n      };\n\n      amortizationArray.push(amortizationMonth);\n    }\n\n    return amortizationArray;\n  }\n\n  formCallback = (formValues) => {\n    /**\n    * Parent callback function called by child component, LoanForm\n    * @param {obj} formValues \n    * @return {function} setState()\n    * @return {function} setLoanResults()\n    */\n    this.setState({\n     formValue: formValues\n    }, function() {\n     this.setLoanResults()\n    });\n  }\n\n  render() {\n    const formResults = this.state.results;\n    const amortizationTable = this.state.amortization;\n\n    return (\n      <div>    \n        <LoanForm parentCallback={this.formCallback} />\n        <LoanResults results={formResults}/>\n        <LoanAmortization table={amortizationTable}/>\n      </div>\n    )\n  }\n}\n\nexport default LoanCalculator;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport LoanCalculator from './components/loanCalculator';\n\nclass App extends Component {\n  render() {\n    return(\n      <div>\n        <h1>Tom's Auto Loan Calculator</h1>\n        <LoanCalculator />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('auto-loan-app'));\n"],"sourceRoot":""}